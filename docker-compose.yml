version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: track-backend-service
    env_file:
      - .env
    ports:
      - "${BACKEND_PORT}:8000"
    depends_on:
      - ml_service
      - postgres_db
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./configs/config.yml:/root/configs/config.yml
      - backend_logs:/var/log/backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  ml_service:
    image: chotam/ml-service:latest
    container_name: ml-service
    env_file:
      - .env
    ports:
      - "${ML_PORT}:443"
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G

  postgres_db:
    env_file:
      - .env
    image: postgres:13-alpine
    container_name: postgres_db
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - app-network
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: md5
      POSTGRES_INITDB_ARGS: "--data-checksums"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema:/docker-entrypoint-initdb.d
      - postgres_logs:/var/log/postgresql
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    shm_size: '256mb'

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: {}
  backend_logs: {}
  postgres_logs: {}